using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Drawing.Imaging;
using System.IO;
using System.Linq;
using System.Windows.Forms;
using System.Windows.Forms.DataVisualization.Charting;
using NPOI.SS.Formula.Functions;
using static ResearchModel.MathStuff;
using static ResearchModel.ProcessCoordinates;
using static ResearchModel.Extensions;

namespace ResearchModel
{

    public partial class MainForm : Form
    {
        private Process myProcess;
        private double _delta, _minDelta, _denominator;

        private FunctionType _type;


        private void MainForm_Load(object sender, EventArgs e)
        {
            myProcess = new Process();
            //myProcess.StartInfo.FileName = @"C:\Users\pravm\AppData\Local\Programs\Python\Python39\python.exe";
            myProcess.StartInfo.FileName = @"C:\Users\Mishanya - PC\AppData\Local\Programs\Python\Python39\python.exe";
            //myProcess.StartInfo.Arguments = "\"C:\\Repository\\SatelliteResearch\\GetElevation.py\"";
            myProcess.StartInfo.Arguments = "\"D:\\VS Pojects\\SatelliteResearch\\GetElevation.py\"";
            myProcess.StartInfo.UseShellExecute = false;// Do not use OS shell
            myProcess.StartInfo.CreateNoWindow = true;  // We don't need new window
            myProcess.StartInfo.RedirectStandardInput = true;
            myProcess.StartInfo.RedirectStandardOutput = true;// Any output, generated by application will be redirected back
            myProcess.StartInfo.RedirectStandardError = true; // Any error in standard output will be redirected back (for example exceptions)
            myProcess.StartInfo.LoadUserProfile = true;

            myProcess.Start();
            myProcess.StandardInput.WriteLine("1 1");
            myProcess.StandardOutput.ReadLine();
            MathProcess = myProcess;
            CoordProcess = myProcess;
        }

        #region RefreshButtonClick

        private void RefreshButtonClick(object sender, EventArgs e)
        {
            newSource.xTextBox.Text = "0";
            newSource.yTextBox.Text = "0";
            newSource.zTextBox.Text = "0";


            if (stormRadioButton.Checked && (_type == FunctionType.ddSpace || _type == FunctionType.dmSpace))
            {

                var tmp = GetStormCoordinates(4);

                searcherStation1.xTextBox.Text = Coordinate[0, 0].ToString();
                searcherStation1.yTextBox.Text = Coordinate[0, 1].ToString();
                searcherStation1.zTextBox.Text = Coordinate[0, 2].ToString();
                searcherStation1.Run(tmp[0]);


                searcherStation2.xTextBox.Text = Coordinate[1, 0].ToString();
                searcherStation2.yTextBox.Text = Coordinate[1, 1].ToString();
                searcherStation2.zTextBox.Text = Coordinate[1, 2].ToString();
                searcherStation2.Run(tmp[1]);


                searcherStation3.xTextBox.Text = Coordinate[2, 0].ToString();
                searcherStation3.yTextBox.Text = Coordinate[2, 1].ToString();
                searcherStation3.zTextBox.Text = Coordinate[2, 2].ToString();
                searcherStation3.Run(tmp[2]);


                searcherStation4.xTextBox.Text = Coordinate[3, 0].ToString();
                searcherStation4.yTextBox.Text = Coordinate[3, 1].ToString();
                searcherStation4.zTextBox.Text = Coordinate[3, 2].ToString();
                searcherStation4.Run(tmp[3]);

            }
            else if (glonassRadioButton.Checked && (_type == FunctionType.ddSpace || _type == FunctionType.dmSpace))
            {

                GenerateGlonassSatellites(4);

                searcherStation1.xTextBox.Text = Coordinate[0, 0].ToString();
                searcherStation1.yTextBox.Text = Coordinate[0, 1].ToString();
                searcherStation1.zTextBox.Text = Coordinate[0, 2].ToString();
                var tmp = new RadioStation(Coordinate[0, 0], Coordinate[0, 1], Coordinate[0, 2], Coordinate[0, 3], Coordinate[0, 4],
                        Coordinate[0, 5]);
                searcherStation1.Run(tmp);


                searcherStation2.xTextBox.Text = Coordinate[1, 0].ToString();
                searcherStation2.yTextBox.Text = Coordinate[1, 1].ToString();
                searcherStation2.zTextBox.Text = Coordinate[1, 2].ToString();
                tmp = new RadioStation(Coordinate[1, 0], Coordinate[1, 1], Coordinate[1, 2], Coordinate[1, 3], Coordinate[1, 4],
                        Coordinate[1, 5]);
                searcherStation2.Run(tmp);


                searcherStation3.xTextBox.Text = Coordinate[2, 0].ToString();
                searcherStation3.yTextBox.Text = Coordinate[2, 1].ToString();
                searcherStation3.zTextBox.Text = Coordinate[2, 2].ToString();
                tmp = new RadioStation(Coordinate[2, 0], Coordinate[2, 1], Coordinate[2, 2], Coordinate[2, 3], Coordinate[2, 4],
                        Coordinate[2, 5]);
                searcherStation3.Run(tmp);


                searcherStation4.xTextBox.Text = Coordinate[3, 0].ToString();
                searcherStation4.yTextBox.Text = Coordinate[3, 1].ToString();
                searcherStation4.zTextBox.Text = Coordinate[3, 2].ToString();
                tmp = new RadioStation(Coordinate[3, 0], Coordinate[3, 1], Coordinate[3, 2], Coordinate[3, 3], Coordinate[3, 4],
                        Coordinate[3, 5]);
                searcherStation4.Run(tmp);
            }
            else if (stormRadioButton.Checked && (_type == FunctionType.ddEarth || _type == FunctionType.dmEarth || _type == FunctionType.sumSpace))
            {
                var tmp = GetStormCoordinates(3);

                searcherStation1.xTextBox.Text = Coordinate[0, 0].ToString();
                searcherStation1.yTextBox.Text = Coordinate[0, 1].ToString();
                searcherStation1.zTextBox.Text = Coordinate[0, 2].ToString();
                searcherStation1.Run(tmp[0]);


                searcherStation2.xTextBox.Text = Coordinate[1, 0].ToString();
                searcherStation2.yTextBox.Text = Coordinate[1, 1].ToString();
                searcherStation2.zTextBox.Text = Coordinate[1, 2].ToString();
                searcherStation2.Run(tmp[1]);


                searcherStation3.xTextBox.Text = Coordinate[2, 0].ToString();
                searcherStation3.yTextBox.Text = Coordinate[2, 1].ToString();
                searcherStation3.zTextBox.Text = Coordinate[2, 2].ToString();
                searcherStation3.Run(tmp[2]);


                searcherStation4.xTextBox.Text = (0).ToString();
                searcherStation4.yTextBox.Text = (0).ToString();
                searcherStation4.zTextBox.Text = (0).ToString();

            }
            else if (glonassRadioButton.Checked && (_type == FunctionType.ddEarth || _type == FunctionType.dmEarth || _type == FunctionType.sumSpace))
            {
                GenerateGlonassSatellites(3);

                searcherStation1.xTextBox.Text = Coordinate[0, 0].ToString();
                searcherStation1.yTextBox.Text = Coordinate[0, 1].ToString();
                searcherStation1.zTextBox.Text = Coordinate[0, 2].ToString();
                var tmp = new RadioStation(Coordinate[0, 0], Coordinate[0, 1], Coordinate[0, 2], Coordinate[0, 3], Coordinate[0, 4],
                        Coordinate[0, 5]);
                searcherStation1.Run(tmp);


                searcherStation2.xTextBox.Text = Coordinate[1, 0].ToString();
                searcherStation2.yTextBox.Text = Coordinate[1, 1].ToString();
                searcherStation2.zTextBox.Text = Coordinate[1, 2].ToString();
                tmp = new RadioStation(Coordinate[1, 0], Coordinate[1, 1], Coordinate[1, 2], Coordinate[1, 3], Coordinate[1, 4],
                        Coordinate[1, 5]);
                searcherStation2.Run(tmp);


                searcherStation3.xTextBox.Text = Coordinate[2, 0].ToString();
                searcherStation3.yTextBox.Text = Coordinate[2, 1].ToString();
                searcherStation3.zTextBox.Text = Coordinate[2, 2].ToString();
                tmp = new RadioStation(Coordinate[2, 0], Coordinate[2, 1], Coordinate[2, 2], Coordinate[2, 3], Coordinate[2, 4],
                        Coordinate[2, 5]);
                searcherStation3.Run(tmp);

                searcherStation4.xTextBox.Text = (0).ToString();
                searcherStation4.yTextBox.Text = (0).ToString();
                searcherStation4.zTextBox.Text = (0).ToString();
            }
            else if (stormRadioButton.Checked && _type == FunctionType.sumEarth)
            {
                var tmp = GetStormCoordinates(2);

                searcherStation1.xTextBox.Text = Coordinate[0, 0].ToString();
                searcherStation1.yTextBox.Text = Coordinate[0, 1].ToString();
                searcherStation1.zTextBox.Text = Coordinate[0, 2].ToString();
                searcherStation1.Run(tmp[0]);


                searcherStation2.xTextBox.Text = Coordinate[1, 0].ToString();
                searcherStation2.yTextBox.Text = Coordinate[1, 1].ToString();
                searcherStation2.zTextBox.Text = Coordinate[1, 2].ToString();
                searcherStation2.Run(tmp[1]);


                searcherStation3.xTextBox.Text = (0).ToString();
                searcherStation3.yTextBox.Text = (0).ToString();
                searcherStation3.zTextBox.Text = (0).ToString();


                searcherStation4.xTextBox.Text = (0).ToString();
                searcherStation4.yTextBox.Text = (0).ToString();
                searcherStation4.zTextBox.Text = (0).ToString();

            }
            else
            {

                GenerateGlonassSatellites(2);

                searcherStation1.xTextBox.Text = Coordinate[0, 0].ToString();
                searcherStation1.yTextBox.Text = Coordinate[0, 1].ToString();
                searcherStation1.zTextBox.Text = Coordinate[0, 2].ToString();
                var tmp = new RadioStation(Coordinate[0, 0], Coordinate[0, 1], Coordinate[0, 2], Coordinate[0, 3], Coordinate[0, 4],
                        Coordinate[0, 5]);
                searcherStation1.Run(tmp);


                searcherStation2.xTextBox.Text = Coordinate[1, 0].ToString();
                searcherStation2.yTextBox.Text = Coordinate[1, 1].ToString();
                searcherStation2.zTextBox.Text = Coordinate[1, 2].ToString();
                tmp = new RadioStation(Coordinate[1, 0], Coordinate[1, 1], Coordinate[1, 2], Coordinate[1, 3], Coordinate[1, 4],
                        Coordinate[1, 5]);
                searcherStation2.Run(tmp);


                searcherStation3.xTextBox.Text = (0).ToString();
                searcherStation3.yTextBox.Text = (0).ToString();
                searcherStation3.zTextBox.Text = (0).ToString();


                searcherStation4.xTextBox.Text = (0).ToString();
                searcherStation4.yTextBox.Text = (0).ToString();
                searcherStation4.zTextBox.Text = (0).ToString();
            }


            if (ElevationCheckBox.Checked)
                GenerateSourceWithElevationMap();
            else
                GenerateSource();

            if (sphericalRadioButton.Checked)
            {
                Random rand = new Random();
                longtitudeTrueTextBox.Text = Math.Round(rand.NextDouble() * 360 - 180, 7).ToString();
                latitudeTrueTextBox.Text = Math.Round(rand.NextDouble() * 180 - 90, 7).ToString();
            }

            ProcessTextBoxesCoordinates();
        }
        #endregion

        private void ddRadioButton_CheckedChanged(object sender, EventArgs e)
        {
            spaceRadioButton_CheckedChanged(sender, e);
            ElevationCheckBox_CheckedChanged(sender, e);
        }

        private void dmRadioButton_CheckedChanged(object sender, EventArgs e)
        {
            spaceRadioButton_CheckedChanged(sender, e);
            ElevationCheckBox_CheckedChanged(sender, e);
        }

        private void sumRadioButton_CheckedChanged(object sender, EventArgs e)
        {
            spaceRadioButton_CheckedChanged(sender, e);
            ElevationCheckBox_CheckedChanged(sender, e);
        }

        private void spaceRadioButton_CheckedChanged(object sender, EventArgs e)
        {
            if (ddRadioButton.Checked && spaceRadioButton.Checked)
            {
                searcherStation3.Enabled = true;
                searcherStation4.Enabled = true;
                _type = FunctionType.ddSpace;
            }
            if (ddRadioButton.Checked && spaceRadioButton.Checked)
            {
                searcherStation3.Enabled = true;
                searcherStation4.Enabled = true;
                _type = FunctionType.ddSpace;
            }
            else if(dmRadioButton.Checked && spaceRadioButton.Checked)
            {
                searcherStation3.Enabled = true;
                searcherStation4.Enabled = true;
                _type = FunctionType.dmSpace;
            }
            else if(spaceRadioButton.Checked)
            {
                searcherStation3.Enabled = true;
                searcherStation4.Enabled = false;
                _type = FunctionType.sumSpace;
            }
        }

        private void earthRadioButton_CheckedChanged(object sender, EventArgs e)
        {
            if (ddRadioButton.Checked  && earthRadioButton.Checked)
            {
                ElevationCheckBox.Enabled = true;
                ElevExplCheckBox.Enabled = true;
                searcherStation3.Enabled = true;
                searcherStation4.Enabled = false;
                _type = FunctionType.ddEarth;
            }
            else if (dmRadioButton.Checked && earthRadioButton.Checked)
            {
                searcherStation3.Enabled = true;
                searcherStation4.Enabled = false;
                ElevationCheckBox.Enabled = true;
                ElevExplCheckBox.Enabled = true;
                _type = FunctionType.dmEarth;
            }
            else if (sumRadioButton.Checked && earthRadioButton.Checked)
            {
                searcherStation3.Enabled = false;
                searcherStation4.Enabled = false;
                ElevationCheckBox.Enabled = true;
                ElevExplCheckBox.Enabled = true;
                _type = FunctionType.sumEarth;
            }
            else
            {
                ElevExplCheckBox.Enabled = false;
                ElevExplCheckBox.Checked = false;
                ElevationCheckBox.Checked = false;
                ElevationCheckBox.Enabled = false;
            }


        }

        private void ElevationCheckBox_CheckedChanged(object sender, EventArgs e)
        {
            if (ddRadioButton.Checked && earthRadioButton.Checked && ElevationCheckBox.Checked)
            {
                searcherStation3.Enabled = true;
                searcherStation4.Enabled = false;
                _type = FunctionType.ddEarthWithMap;
            }
            else if (dmRadioButton.Checked && earthRadioButton.Checked && ElevationCheckBox.Checked)
            {
                searcherStation3.Enabled = true;
                searcherStation4.Enabled = false;
                _type = FunctionType.dmEarthWithMap;
            }
            else if (earthRadioButton.Checked && ElevationCheckBox.Checked)
            {
                searcherStation3.Enabled = false;
                searcherStation4.Enabled = false;
                _type = FunctionType.sumEarthWithMap;
            }
            else
                earthRadioButton_CheckedChanged(sender, e);

        }

        private void glonassRadioButton_CheckedChanged(object sender, EventArgs e)
        {
            RefreshButtonClick(sender, e);
        }

        private void euclideanRadioButton_CheckedChanged(object sender, EventArgs e)
        {
            trueSourceGroupBox.Enabled = false;
            trueSource.Enabled = true;
            ProcessTextBoxesCoordinates();
        }

        private void sphericalRadioButton_CheckedChanged(object sender, EventArgs e)
        {
            trueSourceGroupBox.Enabled = true;
            trueSource.Enabled = false;
            ProcessTextBoxesCoordinates();
        }

        private void MainForm_FormClosing(object sender, FormClosingEventArgs e)
        {
            myProcess.Close();
        }


        public MainForm()
        {
            InitializeComponent();
            InitializeStormSatellites();
            SearcherStation1 = searcherStation1;
            SearcherStation2 = searcherStation2;
            SearcherStation3 = searcherStation3;
            SearcherStation4 = searcherStation4;
            NewSource = newSource;
            TrueSource = trueSource;
            searcherStation1.NameLabel.Text = "Спутник 1";
            searcherStation2.NameLabel.Text = "Спутник 2";
            searcherStation3.NameLabel.Text = "Спутник 3";
            searcherStation4.NameLabel.Text = "Спутник 4";
            trueSource.NameLabel.Text = "Источник";
            newSource.NameLabel.Text = "Предполагаемые координаты";
            progressBar.Visible = true;
            progressBar.Minimum = 0;

            progressBar.Value = 1;
            progressBar.Step = 1;

            stepTextBox.Text = "4";
            minStepTextBox.Text = "0,015625";
            denominatorTextBox.Text = "2";

            RefreshButtonClick(null, EventArgs.Empty);
        }

        private void RunButtonClick(object sender, EventArgs e)
        {
            ProcessTextBoxesCoordinates();
            Stopwatch sp = new Stopwatch();
            sp.Start();

            double r = 63781370;

            _delta = Convert.ToDouble(stepTextBox.Text.Replace('.', ','));
            _minDelta = Convert.ToDouble(minStepTextBox.Text);
            _denominator = Convert.ToDouble(denominatorTextBox.Text);
            F function = Initialization(_type);
            anyInfoLabel.Text = _type.ToString();

            var errorAbs = Convert.ToDouble(errorTextBox.Text);
            var err = new Random().NextDouble() * errorAbs * 2 - errorAbs;
            Dt12 += err;
            err = new Random().NextDouble() * errorAbs * 2 - errorAbs;
            Dt13 += err;
            err = new Random().NextDouble() * errorAbs * 2 - errorAbs;
            Dt14 += err;
            err = new Random().NextDouble() * errorAbs * 2 - errorAbs;
            Dt23  += err;
            err = new Random().NextDouble() * errorAbs * 2 - errorAbs;
            Dt24 += err;
            err = new Random().NextDouble() * errorAbs * 2 - errorAbs;
            Dt34 += err;

            tmpSource = new RadioStation();
            while (!HookJeeves(_delta, _minDelta, _denominator, function))
            {
                
                RefreshButtonClick(null, EventArgs.Empty);
            }

            //ProcessCoordinates();
            newSource.xTextBox.Text = Convert.ToDouble(newSource.X).ToString();
            newSource.yTextBox.Text = Convert.ToDouble(newSource.Y).ToString();
            newSource.zTextBox.Text = Convert.ToDouble(newSource.Z).ToString();
            //longtitudeNewTextBox.Text = newSource.X == 0 ? (newSource.Y > 0 ? 90 : -90).ToString() : (newSource.X > 0 ? Math.Round(Math.Atan(newSource.Y / newSource.X) / Math.PI * 180, 7) : (Math.Atan(newSource.Y / newSource.X) / Math.PI * 180 > 0 ? Math.Round(-90 - Math.Atan(newSource.Y / newSource.X) / Math.PI * 180, 7) : Math.Round(90 - Math.Atan(newSource.Y / newSource.X) / Math.PI * 180, 7))).ToString();
            longtitudeNewTextBox.Text = newSource.X == 0 ? (newSource.Y > 0 ? 90 : -90).ToString() : (newSource.X > 0 ? Math.Round(Math.Atan(newSource.Y / newSource.X) / Math.PI * 180, 7) : (Math.Atan(newSource.Y / newSource.X) / Math.PI * 180 > 0 ? -180 + Math.Atan(newSource.Y / newSource.X) / Math.PI * 180 : 180 +  Math.Atan(newSource.Y / newSource.X) / Math.PI * 180)).ToString();
            latitudeNewTextBox.Text = newSource.Y * newSource.Y + newSource.X * newSource.X == 0 ? (newSource.Z > 0 ? 90 : -90).ToString() : (Math.Round(Math.Atan(newSource.Z / Math.Sqrt(newSource.Y * newSource.Y + newSource.X * newSource.X)) / Math.PI * 180, 7)).ToString();
            //longtitudeNewTextBox.Text = newSource.X == 0 ? (newSource.Y > 0 ? 90 : -90).ToString() :(newSource.X > 0 ? Math.Round(Math.Atan(newSource.Y / newSource.X) / Math.PI * 180,7) : (Math.Round(Math.Atan(newSource.Y / newSource.X) / Math.PI * 180,7)> 0 ? Math.Round(-180 + Math.Atan(newSource.Y / newSource.X) / Math.PI * 180,7) : Math.Round(180 + Math.Atan(newSource.Y / newSource.X) / Math.PI * 180,7)) ).ToString();
            var time = sp.Elapsed;
            timeLabel.Text = $"{time.Minutes:00}:{time.Seconds:00}.{time.Milliseconds:00}";
            errorLabel.Text = Math.Round(GetSourceDifference(),2).ToString();
        }

        
        private void DrawMapButton_Click(object sender, EventArgs e)
        {
            var leftFi = Convert.ToDouble(leftFiTextBox.Text);
            var rightFi = Convert.ToDouble(rightFiTextBox.Text);
            var upperTeta = Convert.ToDouble(upperTetaTextBox.Text);
            var bottomTeta = Convert.ToDouble(bottomTetaTextBox.Text);
            var brightness = Convert.ToInt32(brightnessCoefTextBox.Text);
            

            double backColor;
            if (_type == FunctionType.dmSpace)
                backColor = 100000000000000000;
            else
                backColor = 0.000000000001;

            F function = Initialization(_type);



            var errorAbs = Convert.ToInt32(errorTextBox.Text);


            var longtitude = Convert.ToDouble(longtitudeTrueTextBox.Text);
            var latitude = Convert.ToDouble(latitudeTrueTextBox.Text);


            if (errorAbs == 0)
                DrawClearMap( leftFi, rightFi, upperTeta, bottomTeta, brightness, longtitude, latitude, backColor, function);
            else
                DrawErroredMap(errorAbs, leftFi, rightFi, upperTeta, bottomTeta, brightness, longtitude, latitude, backColor, function);

        }

        #region SumMethodsRefreshClick
        private void SumMethodsRefreshClick(object sender, EventArgs e)
        {
            if (stormRadioButton.Checked)
            {
                if (_type == FunctionType.sumEarthWithMap)
                {
                    SearcherStation1.X = 19447171.057941005;
                    SearcherStation1.Y = 16370214.96020079;
                    SearcherStation1.Z = -9068364.7937681377;
                    SearcherStation1.Vx = 2566.2295392557185;
                    SearcherStation1.Vy = 4798.5432039939533;
                    SearcherStation1.Vz = 3386.603525554111;
                    searcherStation1.xTextBox.Text = SearcherStation1.X.ToString();
                    searcherStation1.yTextBox.Text = SearcherStation1.Y.ToString();
                    searcherStation1.zTextBox.Text = SearcherStation1.Z.ToString();



                    SearcherStation2.X = -13691025.171648258;
                    SearcherStation2.Y = 21418035.151462745;
                    SearcherStation2.Z = 6384229;
                    SearcherStation2.Vx = 3459.9453972000379;
                    SearcherStation2.Vy = 3563.3585432373725;
                    SearcherStation2.Vz = 3259.7034905383844;

                    searcherStation2.xTextBox.Text = SearcherStation2.X.ToString();
                    searcherStation2.yTextBox.Text = SearcherStation2.Y.ToString();
                    searcherStation2.zTextBox.Text = SearcherStation2.Z.ToString();

                    TrueSource.X = -16053977.688941628;
                    TrueSource.Y = -50052303.706932388;
                    TrueSource.Z = -36126165.767610423;

                    X = -16053977.688941628;
                    Y = -50052303.706932388;
                    Z = -36126165.767610423;

                    trueSource.xTextBox.Text = TrueSource.X.ToString();
                    trueSource.yTextBox.Text = TrueSource.Y.ToString();
                    trueSource.zTextBox.Text = TrueSource.Z.ToString();
                    trueSource.Run();

                    NewSource.X = X - 5000;
                    NewSource.Y = Y - 5000;
                    NewSource.Z = Z - 5000;
                    newSource.xTextBox.Text = NewSource.X.ToString();
                    newSource.yTextBox.Text = NewSource.Y.ToString();
                    newSource.zTextBox.Text = NewSource.Z.ToString();
                    newSource.Run();
                }
                else if(_type == FunctionType.sumSpace)
                {
                    SearcherStation1.X = 3671454.545;
                    SearcherStation1.Y = 7774481.823;
                    SearcherStation1.Z = -3335449.6890000002;
                    SearcherStation1.Vx = -107.26299999999999;
                    SearcherStation1.Vy = 6714.665;
                    SearcherStation1.Vz = 4714.327;
                    searcherStation1.xTextBox.Text = SearcherStation1.X.ToString();
                    searcherStation1.yTextBox.Text = SearcherStation1.Y.ToString();
                    searcherStation1.zTextBox.Text = SearcherStation1.Z.ToString();


                    SearcherStation2.X = -3679770.187;
                    SearcherStation2.Y = -7782445.936;
                    SearcherStation2.Z = -3307596.9140000003;
                    SearcherStation2.Vx = 1633.3500838993816;
                    SearcherStation2.Vy = 4945.1015819539789;
                    SearcherStation2.Vz = 1083.6350876296103;
                    searcherStation2.xTextBox.Text = SearcherStation2.X.ToString();
                    searcherStation2.yTextBox.Text = SearcherStation2.Y.ToString();
                    searcherStation2.zTextBox.Text = SearcherStation2.Z.ToString();

                    SearcherStation3.X = 42164136.076000005;
                    SearcherStation3.Y = 13.354;
                    SearcherStation3.Z = -53199.236;
                    SearcherStation3.Vx = -0.005;
                    SearcherStation3.Vy = 0.001;
                    SearcherStation3.Vz = -3.6719999999999997;
                    searcherStation3.xTextBox.Text = SearcherStation3.X.ToString();
                    searcherStation3.yTextBox.Text = SearcherStation3.Y.ToString();
                    searcherStation3.zTextBox.Text = SearcherStation3.Z.ToString();

                    TrueSource.X = 5586213.3877673261;
                    TrueSource.Y = 15973817.899837304;
                    TrueSource.Z = 61495483.742841363;

                    X = 5586213.3877673261;
                    Y = 15973817.899837304;
                    Z = 61495483.742841363;

                    trueSource.xTextBox.Text = TrueSource.X.ToString();
                    trueSource.yTextBox.Text = TrueSource.Y.ToString();
                    trueSource.zTextBox.Text = TrueSource.Z.ToString();
                    trueSource.Run();

                    NewSource.X = X - 5000;
                    NewSource.Y = Y - 5000;
                    NewSource.Z = Z - 5000;
                    newSource.xTextBox.Text = NewSource.X.ToString();
                    newSource.yTextBox.Text = NewSource.Y.ToString();
                    newSource.zTextBox.Text = NewSource.Z.ToString();
                    newSource.Run();
                }

            }
            else
            {
                if (_type == FunctionType.sumEarthWithMap)
                {
                    SearcherStation1.X = -1438795.5863861367;
                    SearcherStation1.Y = 25379248.752880685;
                    SearcherStation1.Z = 670921.40045146749;
                    SearcherStation1.Vx = 4397.7097838175059;
                    SearcherStation1.Vy = 2566.30559571381;
                    SearcherStation1.Vz = 1237.2528581122183;
                    searcherStation1.xTextBox.Text = SearcherStation1.X.ToString();
                    searcherStation1.yTextBox.Text = SearcherStation1.Y.ToString();
                    searcherStation1.zTextBox.Text = SearcherStation1.Z.ToString();


                    SearcherStation2.X = 11673015.920991555;
                    SearcherStation2.Y = 22581344.054512735;
                    SearcherStation2.Z = -5443216;
                    SearcherStation2.Vx = 4216.8946513984793;
                    SearcherStation2.Vy = 4049.1459910055373;
                    SearcherStation2.Vz = 3299.6417271437317;
                    searcherStation2.xTextBox.Text = SearcherStation2.X.ToString();
                    searcherStation2.yTextBox.Text = SearcherStation2.Y.ToString();
                    searcherStation2.zTextBox.Text = SearcherStation2.Z.ToString();
                    
                    TrueSource.X = 4633392.4119862756;
                    TrueSource.Y = 60677780.192657828;
                    TrueSource.Z = 19099785.986365132;

                    X = 4633392.4119862756;
                    Y = 60677780.192657828;
                    Z = 19099785.986365132;

                    trueSource.xTextBox.Text = TrueSource.X.ToString();
                    trueSource.yTextBox.Text = TrueSource.Y.ToString();
                    trueSource.zTextBox.Text = TrueSource.Z.ToString();
                    trueSource.Run();

                    NewSource.X = X- 5000;
                    NewSource.Y = Y - 5000;
                    NewSource.Z = Z - 5000;
                    newSource.xTextBox.Text = NewSource.X.ToString();
                    newSource.yTextBox.Text = NewSource.Y.ToString();
                    newSource.zTextBox.Text = NewSource.Z.ToString();
                    newSource.Run();
                }
                else if (_type == FunctionType.sumSpace)
                {
                    SearcherStation1.X = -2562981.920103997;
                    SearcherStation1.Y = 25290463.097326234;
                    SearcherStation1.Z = 1195138.0970572969;
                    SearcherStation1.Vx = 2335.6780560387665;
                    SearcherStation1.Vy = 4837.6985778276339;
                    SearcherStation1.Vz = 1692.1800429430698;
                    searcherStation1.xTextBox.Text = SearcherStation1.X.ToString();
                    searcherStation1.yTextBox.Text = SearcherStation1.Y.ToString();
                    searcherStation1.zTextBox.Text = SearcherStation1.Z.ToString();


                    SearcherStation2.X = -14497527.788298916;
                    SearcherStation2.Y = 20880567.234332997;
                    SearcherStation2.Z = 6760308;
                    SearcherStation2.Vx = 381.48319599287731;
                    SearcherStation2.Vy = 1916.8746457048107;
                    SearcherStation2.Vz = 586.30666955667857;
                    searcherStation2.xTextBox.Text = SearcherStation2.X.ToString();
                    searcherStation2.yTextBox.Text = SearcherStation2.Y.ToString();
                    searcherStation2.zTextBox.Text = SearcherStation2.Z.ToString();

                    SearcherStation3.X = 24410337.610147119;
                    SearcherStation3.Y = 7093082.387695564;
                    SearcherStation3.Z = 5124144;
                    SearcherStation3.Vx = 2308.0790775400023;
                    SearcherStation3.Vy = 2090.5410624530823;
                    SearcherStation3.Vz = 3301.7910100993658;
                    searcherStation3.xTextBox.Text = SearcherStation3.X.ToString();
                    searcherStation3.yTextBox.Text = SearcherStation3.Y.ToString();
                    searcherStation3.zTextBox.Text = SearcherStation3.Z.ToString();

                    TrueSource.X = 2051215.9433868732;
                    TrueSource.Y = 63621692.089274965;
                    TrueSource.Z = 4016960.035646758;

                    X = 2051215.9433868732;
                    Y = 63621692.089274965;
                    Z = 4016960.035646758;

                    trueSource.xTextBox.Text = TrueSource.X.ToString();
                    trueSource.yTextBox.Text = TrueSource.Y.ToString();
                    trueSource.zTextBox.Text = TrueSource.Z.ToString();
                    trueSource.Run();

                    NewSource.X = X - 5000;
                    NewSource.Y = Y - 5000;
                    NewSource.Z = Z - 5000;
                    newSource.xTextBox.Text = NewSource.X.ToString();
                    newSource.yTextBox.Text = NewSource.Y.ToString();
                    newSource.zTextBox.Text = NewSource.Z.ToString();
                    newSource.Run();
                }
            }
        }
        #endregion

        

        private void DCoordinatesGraphButtonClick(object sender, EventArgs e)
        {
            newSource.Run();
            List<double> points = new List<double>();
            //SumMethodsRefreshClick(sender, e);

            F function = Initialization(_type);

            FindSatelliteInaccuracy(_delta, _minDelta, _denominator,function, points, progressBar);
            string satSystem = glonassRadioButton.Checked ? "GLONASS" : "Storm";
            SaveToExcel(points, _type+"", satSystem, "Coord");
            var form = new ChartsForm();

            form.Show();
            form.dtDifference.Series.Clear();

            var series = new Series
            {
                    Name = _type + "",
                    Color = Color.Green,
                    IsVisibleInLegend = true,
                    IsXValueIndexed = true,
                    ChartType = SeriesChartType.Line,
            };
            form.dtDifference.Series.Add(series);
            for (int i = 0; i < points.Count; i++)
            {
                form.dtDifference.Series[0].Points.AddXY(i, points[i]);
            }
            form.Controls.Add(form.dtDifference);
            form.dtDifference.Show();
        }

        

        private void DtGraphButton(object sender, EventArgs e)
        {
            //SumMethodsRefreshClick(sender, e);

            //newSource.Run();
            List<double> points = new List<double>();
            F function = Initialization(_type);

            string explType = "";

            if (_type == FunctionType.ddSpace || _type == FunctionType.ddEarth || _type == FunctionType.ddEarthWithMap)
            {
                FindDwInaccuracy(_delta, _minDelta, _denominator, function, points, progressBar);
                explType = "DW";
            }
            else if (_type == FunctionType.dmEarth || _type == FunctionType.dmSpace || _type == FunctionType.dmEarthWithMap)
            {
                FindDtInaccuracy(_delta, _minDelta, _denominator, function, points, progressBar);
                explType = "DT";
            }
            else
            {
                FindSumInaccuracy(_delta, _minDelta, _denominator, function, points, progressBar);
                explType = "DT + DW";
            }

            string satSystem = glonassRadioButton.Checked ? "GLONASS" : "Storm";
            


            SaveToExcel(points, _type + "", satSystem, explType);
            ChartsForm form = new ChartsForm();
            
            form.Show();

            form.dtDifference.Series.Clear();
            var series = new Series
            {
                Name = _type + "",
                Color = Color.Green,
                IsVisibleInLegend = true,
                IsXValueIndexed = true,
                ChartType = SeriesChartType.Line,
            };
            form.dtDifference.Series.Add(series);
            for (int i = 0; i < points.Count; i++)
            {
                form.dtDifference.Series[0].Points.AddXY(i, points[i]);
            }
            form.Controls.Add(form.dtDifference);
            form.dtDifference.Show();
        }


        void ProcessTextBoxesCoordinates()
        {
            if (euclideanRadioButton.Checked)
            {
                trueSource.X = X;
                trueSource.Y = Y;
                trueSource.Z = Z;
                trueSource.xTextBox.Text = X.ToString();
                trueSource.yTextBox.Text = Y.ToString();
                trueSource.zTextBox.Text = Z.ToString();
                trueSource.Run();

                longtitudeTrueTextBox.Text = trueSource.X == 0 ? (trueSource.Y > 0 ? 90 : -90).ToString() : (trueSource.X > 0 ? Math.Round(Math.Atan(trueSource.Y / trueSource.X) / Math.PI * 180, 7) : (Math.Atan(trueSource.Y / trueSource.X) / Math.PI * 180 > 0 ? -180 + Math.Atan(trueSource.Y / trueSource.X) / Math.PI * 180 : 180 + Math.Atan(trueSource.Y / trueSource.X) / Math.PI * 180)).ToString();
                latitudeTrueTextBox.Text = trueSource.Y * trueSource.Y + trueSource.X * trueSource.X == 0 ? (trueSource.Z > 0 ? 90 : -90).ToString() : Math.Round(Math.Atan(trueSource.Z / Math.Sqrt(trueSource.Y * trueSource.Y + trueSource.X * trueSource.X)) / Math.PI * 180, 7).ToString();
            }
            else
            {
                double r = 63781370;
                X = r * Math.Cos(Math.PI * Convert.ToDouble(latitudeTrueTextBox.Text) / 180) * Math.Cos(Math.PI * Convert.ToDouble(longtitudeTrueTextBox.Text) / 180);
                Y = r * Math.Cos(Math.PI * Convert.ToDouble(latitudeTrueTextBox.Text) / 180) * Math.Sin(Math.PI * Convert.ToDouble(longtitudeTrueTextBox.Text) / 180);
                Z = r * Math.Sin(Math.PI * Convert.ToDouble(latitudeTrueTextBox.Text) / 180);
                trueSource.X = X;
                trueSource.Y = Y;
                trueSource.Z = Z;
                //trueSource.xTextBox.Text = X.ToString();
                //trueSource.yTextBox.Text = Y.ToString();
                //trueSource.zTextBox.Text = Z.ToString();
                trueSource.xTextBox.Text = trueSource.X.ToString();
                trueSource.yTextBox.Text = trueSource.Y.ToString();
                trueSource.zTextBox.Text = trueSource.Z.ToString();
                trueSource.Run();
            }


            newSource.xTextBox.Text = (X - 5000).ToString();
            newSource.yTextBox.Text = (Y - 5000).ToString();
            newSource.zTextBox.Text = (Z - 5000).ToString();
            newSource.Run();

        }


    }
}

